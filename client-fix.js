// client-fix.js - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–°–ö–û–ô –ß–ê–°–¢–ò
console.log('üîß –ó–ê–ì–†–£–ñ–ê–ï–ú –ö–õ–ò–ï–ù–¢–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø...');

// –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–Ø–ï–ú –í–°–ï –ö–õ–Æ–ß–ï–í–´–ï –§–£–ù–ö–¶–ò–ò

// 1. –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
window.syncUserData = async function(force = false) {
    if (!window.userData) return false;
    
    console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    
    try {
        const deviceId = window.generateDeviceId();
        const syncData = {
            userId: window.userData.userId,
            telegramId: window.userData.telegramId,
            username: window.userData.username,
            balance: window.userData.balance,
            totalEarned: window.userData.totalEarned,
            totalClicks: window.userData.totalClicks,
            upgrades: window.upgrades,
            deviceId: deviceId
        };
        
        const response = await window.apiRequest('/api/sync/unified', {
            method: 'POST',
            body: JSON.stringify(syncData)
        });
        
        if (response && response.success) {
            console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ. –ë–∞–ª–∞–Ω—Å:', response.bestBalance);
            
            // –û–ë–ù–û–í–õ–Ø–ï–ú –õ–û–ö–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –° –°–ï–†–í–ï–†–ù–´–ú–ò
            if (response.bestBalance > window.userData.balance) {
                window.userData.balance = response.bestBalance;
                updateUI();
            }
            
            // –ï–°–õ–ò –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ú–£–õ–¨–¢–ò–°–ï–°–°–ò–Ø - –ü–†–ï–î–£–ü–†–ï–ñ–î–ê–ï–ú
            if (response.multisessionDetected) {
                showNotification('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!', 'warning');
            }
            
            return true;
        }
    } catch (error) {
        console.log('üì¥ –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
    return false;
};

// 2. –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•
window.loadUserDataFixed = async function() {
    console.log('üì• –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•...');
    
    const userId = window.getUnifiedUserId();
    const telegramId = window.getTelegramId();
    const username = window.getTelegramUsername();
    
    // –°–û–ó–î–ê–ï–ú –ë–ê–ó–û–í–´–ï –î–ê–ù–ù–´–ï
    window.userData = {
        userId: userId,
        username: username,
        balance: 0.000000100,
        totalEarned: 0.000000100,
        totalClicks: 0,
        lastUpdate: Date.now(),
        telegramId: telegramId
    };
    
    // –ó–ê–ì–†–£–ñ–ê–ï–ú –° –°–ï–†–í–ï–†–ê
    try {
        let serverData = null;
        
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ telegramId
        if (telegramId) {
            const response = await window.apiRequest(`/api/sync/telegram/${telegramId}`);
            if (response && response.success) {
                serverData = response.userData;
                console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ telegramId');
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –ø–æ userId
        if (!serverData) {
            const response = await window.apiRequest(`/api/sync/unified/${userId}`);
            if (response && response.success) {
                serverData = response.userData;
                console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ userId');
            }
        }
        
        // –ï–°–õ–ò –ù–ê–®–õ–ò –î–ê–ù–ù–´–ï –ù–ê –°–ï–†–í–ï–†–ï - –ò–°–ü–û–õ–¨–ó–£–ï–ú –ò–•
        if (serverData) {
            window.userData = serverData;
            console.log('üéØ –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ë–∞–ª–∞–Ω—Å:', window.userData.balance);
        } else {
            // –ò–ù–ê–ß–ï –ü–†–û–ë–£–ï–ú LOCALSTORAGE
            const localData = localStorage.getItem('sparkcoin_user_data');
            if (localData) {
                const parsed = JSON.parse(localData);
                if (parsed.userId === userId || parsed.telegramId === telegramId) {
                    window.userData = {...window.userData, ...parsed};
                    console.log('üíæ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ë–∞–ª–∞–Ω—Å:', window.userData.balance);
                }
            }
        }
        
    } catch (error) {
        console.log('üì¥ –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        const localData = localStorage.getItem('sparkcoin_user_data');
        if (localData) {
            const parsed = JSON.parse(localData);
            window.userData = {...window.userData, ...parsed};
        }
    }
    
    // –ó–ê–ì–†–£–ñ–ê–ï–ú –£–õ–£–ß–®–ï–ù–ò–Ø
    try {
        const savedUpgrades = localStorage.getItem('sparkcoin_upgrades_' + userId);
        if (savedUpgrades) {
            window.upgrades = JSON.parse(savedUpgrades);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ª—É—á—à–µ–Ω–∏–π');
        window.upgrades = {};
    }
    
    window.isDataLoaded = true;
    console.log('üë§ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', window.userData.username, '–ë–∞–ª–∞–Ω—Å:', window.userData.balance);
    
    // –°–ò–ù–•–†–û–ù–ò–ó–ò–†–£–ï–ú –° –°–ï–†–í–ï–†–û–ú
    setTimeout(() => window.syncUserData(), 1000);
};

// 3. –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï
window.saveUserDataFixed = function() {
    if (!window.userData) return;
    
    try {
        window.userData.lastUpdate = Date.now();
        
        // –°–û–•–†–ê–ù–Ø–ï–ú –í LOCALSTORAGE
        localStorage.setItem('sparkcoin_user_data', JSON.stringify(window.userData));
        
        if (window.upgrades) {
            localStorage.setItem('sparkcoin_upgrades_' + window.userData.userId, JSON.stringify(window.upgrades));
        }
        
        console.log('üíæ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ. –ë–∞–ª–∞–Ω—Å:', window.userData.balance);
        
        // –°–ò–ù–•–†–û–ù–ò–ó–ò–†–£–ï–ú –° –°–ï–†–í–ï–†–û–ú (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        setTimeout(() => window.syncUserData(), 500);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
    }
};

// 4. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
window.generateDeviceId = function() {
    return btoa(navigator.userAgent + navigator.platform).substring(0, 20);
};

window.getUnifiedUserId = function() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user?.id) {
        return `tg_${Telegram.WebApp.initDataUnsafe.user.id}`;
    }
    let webId = localStorage.getItem('sparkcoin_web_user_id');
    if (!webId) {
        webId = 'web_' + Math.random().toString(36).substr(2, 9);
        localStorage.setItem('sparkcoin_web_user_id', webId);
    }
    return webId;
};

window.getTelegramId = function() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user?.id) {
        return Telegram.WebApp.initDataUnsafe.user.id.toString();
    }
    return null;
};

window.getTelegramUsername = function() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user) {
        const user = Telegram.WebApp.initDataUnsafe.user;
        return user.username ? `@${user.username}` : user.first_name || '–ò–≥—Ä–æ–∫';
    }
    return '–í–µ–±-–ò–≥—Ä–æ–∫';
};

// 5. –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–Ø–ï–ú –°–¢–ê–†–´–ï –§–£–ù–ö–¶–ò–ò
window.loadUserData = window.loadUserDataFixed;
window.saveUserData = window.saveUserDataFixed;

// 6. –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ú–ê–ô–ù–ò–ù–ì (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)
let miningInterval = null;
let lastMiningUpdate = 0;

window.startFixedMining = function() {
    if (miningInterval) clearInterval(miningInterval);
    
    miningInterval = setInterval(() => {
        if (!window.userData || !window.isDataLoaded) return;
        
        const miningSpeed = calculateMiningSpeed();
        if (miningSpeed > 0) {
            // –î–û–ë–ê–í–õ–Ø–ï–ú –¢–û–õ–¨–ö–û –ï–°–õ–ò –ü–†–û–®–õ–û –î–û–°–¢–ê–¢–û–ß–ù–û –í–†–ï–ú–ï–ù–ò
            const now = Date.now();
            if (now - lastMiningUpdate > 1000) {
                window.userData.balance += miningSpeed;
                window.userData.totalEarned += miningSpeed;
                lastMiningUpdate = now;
                
                // –û–ë–ù–û–í–õ–Ø–ï–ú –¢–û–õ–¨–ö–û –ë–ê–õ–ê–ù–° (–Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É)
                updateBalanceImmediately();
            }
        }
    }, 1000);
};

// –ó–ê–ü–£–°–ö –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ó–ê–ü–£–°–ö –ö–õ–ò–ï–ù–¢–°–ö–ò–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô...');
    
    setTimeout(() => {
        // –ó–ê–ì–†–£–ñ–ê–ï–ú –î–ê–ù–ù–´–ï
        window.loadUserDataFixed().then(() => {
            // –ó–ê–ü–£–°–ö–ê–ï–ú –ú–ê–ô–ù–ò–ù–ì
            window.startFixedMining();
            
            // –°–û–•–†–ê–ù–Ø–ï–ú –ö–ê–ñ–î–´–ï 10 –°–ï–ö–£–ù–î
            setInterval(() => {
                if (window.userData) {
                    window.saveUserDataFixed();
                }
            }, 10000);
        });
    }, 1000);
});

console.log('‚úÖ –ö–õ–ò–ï–ù–¢–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–ì–†–£–ñ–ï–ù–´!');
