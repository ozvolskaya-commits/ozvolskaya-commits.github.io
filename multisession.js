// multisession-hard-fix.js - –ñ–ï–°–¢–ö–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏
console.log('üîí –ó–ê–ì–†–£–ñ–ê–ï–ú –ñ–ï–°–¢–ö–£–Æ –ë–õ–û–ö–ò–†–û–í–ö–£ –ú–£–õ–¨–¢–ò–°–ï–°–°–ò–ò...');

class HardSessionBlocker {
    constructor() {
        this.sessionKey = 'sparkcoin_hard_session';
        this.blockKey = 'sparkcoin_hard_blocked';
        this.lastActivityKey = 'sparkcoin_last_activity_hard';
        this.checkInterval = null;
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SUPER-—É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    generateSuperDeviceId() {
        let deviceId = localStorage.getItem('sparkcoin_super_device_id');
        if (!deviceId) {
            const userAgent = navigator.userAgent;
            const platform = navigator.platform;
            const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
            deviceId = btoa(`${userAgent}-${platform}-${timezone}-${Date.now()}-${Math.random()}`).substring(0, 32);
            localStorage.setItem('sparkcoin_super_device_id', deviceId);
        }
        return deviceId;
    }

    // –ñ–ï–°–¢–ö–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkHardSessionOnLoad() {
        const currentDevice = this.generateSuperDeviceId();
        const telegramId = this.getTelegramId();
        
        console.log('üîç –ñ–ï–°–¢–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ï–°–°–ò–ò:', { telegramId, currentDevice });

        if (!telegramId) {
            console.log('‚ÑπÔ∏è –ù–µ—Ç Telegram ID, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É');
            return true;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        const blockedDevice = localStorage.getItem(this.blockKey);
        if (blockedDevice && blockedDevice !== currentDevice) {
            console.log('üö´ –°–ï–°–°–ò–Ø –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ê! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...');
            this.redirectToHardBlock();
            return false;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
        this.updateHardSession(telegramId, currentDevice);
        return true;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é (–¢–û–õ–¨–ö–û –û–î–ù–ê –ê–ö–¢–ò–í–ù–ê–Ø)
    updateHardSession(telegramId, deviceId) {
        const sessionData = {
            telegramId: telegramId,
            deviceId: deviceId,
            timestamp: Date.now(),
            userAgent: navigator.userAgent
        };
        
        localStorage.setItem(this.sessionKey, JSON.stringify(sessionData));
        localStorage.setItem(this.lastActivityKey, Date.now().toString());
        
        console.log('‚úÖ –°–ï–°–°–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ê:', deviceId);
    }

    // –ü–æ–ª—É—á–∞–µ–º Telegram ID
    getTelegramId() {
        if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user?.id) {
            return Telegram.WebApp.initDataUnsafe.user.id.toString();
        }
        return null;
    }

    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    startHardMonitoring() {
        console.log('üîç –ó–ê–ü–£–°–ö –ñ–ï–°–¢–ö–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê...');
        
        this.checkInterval = setInterval(() => {
            this.checkActiveSession();
        }, 3000);

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        ['click', 'keypress', 'mousemove', 'touchstart', 'scroll'].forEach(event => {
            document.addEventListener(event, () => {
                this.updateActivity();
            }, { passive: true });
        });
    }

    checkActiveSession() {
        const currentSession = JSON.parse(localStorage.getItem(this.sessionKey) || '{}');
        const currentDevice = this.generateSuperDeviceId();
        
        if (currentSession.deviceId && currentSession.deviceId !== currentDevice) {
            console.log('üö´ –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ú–£–õ–¨–¢–ò–°–ï–°–°–ò–Ø! –ë–ª–æ–∫–∏—Ä—É–µ–º...');
            this.blockSession();
            this.redirectToHardBlock();
        }
    }

    blockSession() {
        const currentDevice = this.generateSuperDeviceId();
        localStorage.setItem(this.blockKey, currentDevice);
        
        // –ê–≤—Ç–æ—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
        setTimeout(() => {
            localStorage.removeItem(this.blockKey);
        }, 120000);
    }

    updateActivity() {
        localStorage.setItem(this.lastActivityKey, Date.now().toString());
    }

    redirectToHardBlock() {
        window.location.href = 'multisession-hard-block.html';
    }

    stopMonitoring() {
        if (this.checkInterval) {
            clearInterval(this.checkInterval);
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ñ–ï–°–¢–ö–û–ô –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
window.hardSessionBlocker = new HardSessionBlocker();

// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîí –ó–ê–ü–£–°–ö –ñ–ï–°–¢–ö–û–ô –ü–†–û–í–ï–†–ö–ò –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï...');
    
    setTimeout(() => {
        const allowed = window.hardSessionBlocker.checkHardSessionOnLoad();
        if (allowed) {
            window.hardSessionBlocker.startHardMonitoring();
            console.log('‚úÖ –ñ–ï–°–¢–ö–ê–Ø –ë–õ–û–ö–ò–†–û–í–ö–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê');
        }
    }, 1000);
});
