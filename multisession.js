// multisession.js - –£–°–ò–õ–ï–ù–ù–ê–Ø —Å–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π
console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –£–°–ò–õ–ï–ù–ù–£–Æ —Å–∏—Å—Ç–µ–º—É –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π...');

class MultiSessionDetector {
    constructor() {
        this.sessionKey = 'sparkcoin_device_session';
        this.syncKey = 'sparkcoin_sync_data';
        this.activityKey = 'sparkcoin_last_activity';
        this.blockedKey = 'sparkcoin_blocked_session';
        this.checkInterval = null;
        this.isMonitoring = false;
        this.lastBlockTime = 0;
        this.warningShown = false;
        this.lastWarningTime = 0;
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    generateDeviceId() {
        let deviceId = localStorage.getItem('sparkcoin_device_id');
        if (!deviceId) {
            deviceId = 'device_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('sparkcoin_device_id', deviceId);
        }
        return deviceId;
    }
    
    // –ü–†–û–í–ï–†–ö–ê –ú–£–õ–¨–¢–ò–°–ï–°–°–ò–ò –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï–ú
    checkMultiSession() {
        try {
            const currentDevice = this.generateDeviceId();
            const currentTime = Date.now();
            const lastSync = JSON.parse(localStorage.getItem(this.syncKey) || '{}');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è
            const blockedSession = localStorage.getItem(this.blockedKey);
            if (blockedSession === currentDevice) {
                console.log('üö´ –°–µ—Å—Å–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...');
                this.redirectToWarning();
                return true;
            }
            
            // –ï—Å–ª–∏ –¥—Ä—É–≥–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω–æ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ - –ü–†–ï–î–£–ü–†–ï–ñ–î–ê–ï–ú
            if (lastSync.deviceId && lastSync.deviceId !== currentDevice && 
                currentTime - lastSync.timestamp < 5000) {
                
                console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—è! –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:', lastSync.deviceId);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥
                if (!this.warningShown && (currentTime - this.lastWarningTime > 30000)) {
                    this.showWarning();
                    this.warningShown = true;
                    this.lastWarningTime = currentTime;
                }
                
                return true; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º
            }
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ—Ç –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏
            if (this.warningShown && (!lastSync.deviceId || lastSync.deviceId === currentDevice)) {
                this.warningShown = false;
            }
            
            // –ï—Å–ª–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 30 —Å–µ–∫—É–Ω–¥, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º
            if (blockedSession && currentTime - this.lastBlockTime > 30000) {
                localStorage.removeItem(this.blockedKey);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            this.updateSync();
            return false;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏:', error);
            return false;
        }
    }
    
    // –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –°–¢–†–ê–ù–ò–¶–£ –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø
    redirectToWarning() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π URL –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        sessionStorage.setItem('original_url', window.location.href);
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        setTimeout(() => {
            window.location.href = 'multisession-warning.html';
        }, 1000);
    }
    
    // –ü–û–ö–ê–ó–´–í–ê–ï–ú –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï (–≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ)
    showWarning() {
        if (document.getElementById('multisessionWarning')) {
            return;
        }
        
        const warningHTML = `
            <div id="multisessionWarning" style="
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.85);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 10000;
                backdrop-filter: blur(10px);
                animation: fadeIn 0.3s ease;
            ">
                <div style="
                    background: linear-gradient(135deg, rgba(255, 152, 0, 0.2), rgba(255, 152, 0, 0.1));
                    border-radius: 20px;
                    padding: 30px;
                    text-align: center;
                    max-width: 400px;
                    width: 90%;
                    border: 2px solid rgba(255, 152, 0, 0.5);
                    box-shadow: 0 20px 40px rgba(255, 152, 0, 0.4);
                    animation: scaleIn 0.3s ease;
                ">
                    <div style="font-size: 28px; margin-bottom: 15px;">‚ö†Ô∏è</div>
                    <div style="font-size: 20px; font-weight: bold; color: #FF9800; margin-bottom: 10px;">
                        –ú—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—è
                    </div>
                    <div style="color: white; margin-bottom: 25px; line-height: 1.5; font-size: 14px;">
                        –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –¥—Ä—É–≥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.<br>
                        –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
                    </div>
                    <div style="display: flex; gap: 10px; justify-content: center;">
                        <button onclick="window.multiSessionDetector.closeWarning()" style="
                            background: linear-gradient(135deg, #2196F3, #1976D2);
                            color: white;
                            border: none;
                            padding: 12px 25px;
                            border-radius: 10px;
                            font-weight: bold;
                            cursor: pointer;
                            font-size: 14px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.transform='translateY(-2px)'" onmouseout="this.style.transform='translateY(0)'">
                            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                        </button>
                        <button onclick="window.multiSessionDetector.handleReload()" style="
                            background: rgba(255, 255, 255, 0.1);
                            color: white;
                            border: 1px solid #666;
                            padding: 12px 25px;
                            border-radius: 10px;
                            font-weight: bold;
                            cursor: pointer;
                            font-size: 14px;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.transform='translateY(-2px)'" onmouseout="this.style.transform='translateY(0)'">
                            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
                        </button>
                    </div>
                    <div style="margin-top: 15px; font-size: 11px; color: rgba(255, 255, 255, 0.5);">
                        –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
                    </div>
                </div>
            </div>
            <style>
                @keyframes fadeIn {
                    from { opacity: 0; }
                    to { opacity: 1; }
                }
                @keyframes scaleIn {
                    from { transform: scale(0.9); opacity: 0; }
                    to { transform: scale(1); opacity: 1; }
                }
            </style>
        `;
        
        document.body.insertAdjacentHTML('beforeend', warningHTML);
    }
    
    // –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    closeWarning() {
        const warning = document.getElementById('multisessionWarning');
        if (warning) {
            warning.remove();
        }
        this.warningShown = false;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    handleReload() {
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        localStorage.removeItem('sparkcoin_sync_data');
        localStorage.removeItem('sparkcoin_active_session');
        localStorage.removeItem('sparkcoin_last_activity');
        localStorage.removeItem('sparkcoin_blocked_session');
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        location.reload();
    }
    
    // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    continueAnyway() {
        const warning = document.getElementById('multisessionWarning');
        if (warning) {
            warning.remove();
        }
        
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é
        localStorage.removeItem('sparkcoin_blocked_session');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã —ç—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å—Ç–∞–ª–æ –æ—Å–Ω–æ–≤–Ω—ã–º
        this.updateSync();
        
        this.showContinueNotification();
    }
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏
    showContinueNotification() {
        const notification = document.createElement('div');
        notification.innerHTML = `
            <div style="
                position: fixed;
                top: 20px;
                right: 20px;
                background: linear-gradient(135deg, #FF9800, #F57C00);
                color: white;
                padding: 12px 20px;
                border-radius: 10px;
                font-weight: bold;
                z-index: 10001;
                box-shadow: 0 5px 15px rgba(255, 152, 0, 0.4);
                animation: slideInRight 0.3s ease;
            ">
                ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—è
            </div>
            <style>
                @keyframes slideInRight {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
            </style>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    updateSync() {
        try {
            const syncData = {
                deviceId: this.generateDeviceId(),
                timestamp: Date.now(),
                userId: window.userData?.userId || 'unknown',
                userAgent: navigator.userAgent.substring(0, 100),
                telegramId: window.userData?.telegramId || 'unknown'
            };
            localStorage.setItem(this.syncKey, JSON.stringify(syncData));
            localStorage.setItem(this.activityKey, Date.now().toString());
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        }
    }
    
    // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    startMonitoring() {
        if (this.isMonitoring) return;
        
        console.log('üîç –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π...');
        
        // –°–†–ê–ó–£ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        setTimeout(() => {
            if (this.checkMultiSession()) {
                return; // –ï—Å–ª–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            }
        }, 1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
        this.checkInterval = setInterval(() => {
            this.checkMultiSession();
        }, 3000);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const activityEvents = ['click', 'keypress', 'mousemove', 'touchstart', 'scroll'];
        activityEvents.forEach(event => {
            document.addEventListener(event, () => {
                this.updateSync();
            }, { passive: true });
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('visibilitychange', () => {
            if (!document.hidden) {
                this.updateSync();
                // –ü—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—é
                setTimeout(() => this.checkMultiSession(), 1000);
            }
        });
        
        this.isMonitoring = true;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    stopMonitoring() {
        if (this.checkInterval) {
            clearInterval(this.checkInterval);
            this.checkInterval = null;
        }
        this.isMonitoring = false;
        console.log('üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏
    getStatus() {
        const lastSync = JSON.parse(localStorage.getItem(this.syncKey) || '{}');
        const currentDevice = this.generateDeviceId();
        const isMultiSession = lastSync.deviceId && lastSync.deviceId !== currentDevice;
        const isBlocked = localStorage.getItem(this.blockedKey) === currentDevice;
        
        return {
            isMultiSession: isMultiSession,
            isBlocked: isBlocked,
            currentDevice: currentDevice,
            lastDevice: lastSync.deviceId,
            lastActivity: lastSync.timestamp ? new Date(lastSync.timestamp) : null,
            timeSinceLastActivity: lastSync.timestamp ? Date.now() - lastSync.timestamp : null
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π
window.multiSessionDetector = new MultiSessionDetector();

// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–ü–£–°–ö –ü–†–û–í–ï–†–ö–ò
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(() => {
            window.multiSessionDetector.startMonitoring();
        }, 2000);
    });
} else {
    setTimeout(() => {
        window.multiSessionDetector.startMonitoring();
    }, 2000);
}

console.log('‚úÖ –£–°–ò–õ–ï–ù–ù–ê–Ø —Å–∏—Å—Ç–µ–º–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
