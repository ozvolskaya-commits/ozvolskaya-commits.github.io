// multisession.js - –£–°–ò–õ–ï–ù–ù–ê–Ø —Å–∏—Å—Ç–µ–º–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π
console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –£–°–ò–õ–ï–ù–ù–£–Æ —Å–∏—Å—Ç–µ–º—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π...');

class MultiSessionDetector {
    constructor() {
        this.sessionKey = 'sparkcoin_device_session';
        this.syncKey = 'sparkcoin_sync_data';
        this.activityKey = 'sparkcoin_last_activity';
        this.blockedKey = 'sparkcoin_blocked_session';
        this.telegramKey = 'sparkcoin_telegram_user';
        this.checkInterval = null;
        this.isMonitoring = false;
        this.lastBlockTime = 0;
        this.blockTimeout = 30000; // 30 —Å–µ–∫—É–Ω–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    generateDeviceId() {
        let deviceId = localStorage.getItem('sparkcoin_device_id');
        if (!deviceId) {
            deviceId = 'device_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('sparkcoin_device_id', deviceId);
        }
        return deviceId;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º Telegram username
    getTelegramUsername() {
        if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user) {
            const user = Telegram.WebApp.initDataUnsafe.user;
            if (user.username) {
                return '@' + user.username;
            } else if (user.first_name) {
                return user.first_name;
            } else if (user.id) {
                return 'user_' + user.id;
            }
        }
        
        // –î–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
        return localStorage.getItem('sparkcoin_web_username') || 'web_user';
    }
    
    // –ü–æ–ª—É—á–∞–µ–º Telegram ID
    getTelegramId() {
        if (typeof Telegram !== 'undefined' && Telegram.WebApp && Telegram.WebApp.initDataUnsafe?.user?.id) {
            return Telegram.WebApp.initDataUnsafe.user.id.toString();
        }
        return null;
    }
    
    // –ñ–ï–°–¢–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ú–£–õ–¨–¢–ò–°–ï–°–°–ò–ò –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
    async checkMultiSessionOnLoad() {
        try {
            const currentDevice = this.generateDeviceId();
            const telegramId = this.getTelegramId();
            const username = this.getTelegramUsername();
            
            if (!telegramId) {
                console.log('‚ÑπÔ∏è Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É');
                return true; // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
            }
            
            console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏ –¥–ª—è:', { telegramId, username, currentDevice });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è
            const blockedSession = localStorage.getItem(this.blockedKey);
            if (blockedSession === currentDevice) {
                console.log('üö´ –°–µ—Å—Å–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...');
                this.redirectToBlockPage();
                return false;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—é —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
            const sessionCheck = await this.checkServerSession(telegramId, currentDevice, username);
            
            if (!sessionCheck.allowed) {
                console.log('üö´ –°–µ—Ä–≤–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç—É–ø –∏–∑-–∑–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏');
                this.blockCurrentSession();
                this.redirectToBlockPage();
                return false;
            }
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
            if (sessionCheck.activeSession && sessionCheck.activeSession.deviceId !== currentDevice) {
                console.log('üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ');
                this.blockCurrentSession();
                this.redirectToBlockPage();
                return false;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
            this.updateSession(telegramId, currentDevice, username);
            
            console.log('‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
            return true;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏:', error);
            return true; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    async checkServerSession(telegramId, deviceId, username) {
        try {
            const response = await fetch('https://sparkcoin.ru/api/session/check', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    telegramId: telegramId,
                    deviceId: deviceId,
                    username: username
                })
            });
            
            if (response.ok) {
                return await response.json();
            }
        } catch (error) {
            console.log('üì¥ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É');
        }
        
        // Fallback: –ª–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        return this.checkLocalSession(telegramId, deviceId);
    }
    
    // –õ–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏
    checkLocalSession(telegramId, deviceId) {
        const lastSync = JSON.parse(localStorage.getItem(this.syncKey) || '{}');
        const currentTime = Date.now();
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è (–º–µ–Ω–µ–µ 15 —Å–µ–∫—É–Ω–¥) –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥—Ä—É–≥–æ–µ
        if (lastSync.telegramId === telegramId && 
            lastSync.deviceId && 
            lastSync.deviceId !== deviceId &&
            currentTime - lastSync.timestamp < 15000) {
            
            return {
                allowed: false,
                activeSession: {
                    deviceId: lastSync.deviceId,
                    username: lastSync.username
                }
            };
        }
        
        return { allowed: true };
    }
    
    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    blockCurrentSession() {
        const currentDevice = this.generateDeviceId();
        localStorage.setItem(this.blockedKey, currentDevice);
        this.lastBlockTime = Date.now();
        
        // –ê–≤—Ç–æ—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            localStorage.removeItem(this.blockedKey);
        }, this.blockTimeout);
    }
    
    // –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –°–¢–†–ê–ù–ò–¶–£ –ë–õ–û–ö–ò–†–û–í–ö–ò
    redirectToBlockPage() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π URL –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
        sessionStorage.setItem('original_url', window.location.href);
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        setTimeout(() => {
            window.location.href = 'multisession-blocked.html';
        }, 1000);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    updateSession(telegramId, deviceId, username) {
        try {
            const sessionData = {
                telegramId: telegramId,
                deviceId: deviceId,
                username: username,
                timestamp: Date.now(),
                userAgent: navigator.userAgent.substring(0, 100)
            };
            
            localStorage.setItem(this.syncKey, JSON.stringify(sessionData));
            localStorage.setItem(this.activityKey, Date.now().toString());
            localStorage.setItem(this.telegramKey, telegramId);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error);
        }
    }
    
    // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    startMonitoring() {
        if (this.isMonitoring) return;
        
        console.log('üîç –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        this.checkInterval = setInterval(() => {
            this.checkActiveSession();
        }, 5000);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const activityEvents = ['click', 'keypress', 'mousemove', 'touchstart', 'scroll'];
        activityEvents.forEach(event => {
            document.addEventListener(event, () => {
                this.updateActivity();
            }, { passive: true });
        });
        
        this.isMonitoring = true;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    async checkActiveSession() {
        const telegramId = this.getTelegramId();
        const deviceId = this.generateDeviceId();
        
        if (!telegramId) return;
        
        try {
            const sessionCheck = await this.checkServerSession(telegramId, deviceId, this.getTelegramUsername());
            
            if (!sessionCheck.allowed) {
                console.log('üö´ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã');
                this.blockCurrentSession();
                this.redirectToBlockPage();
                return;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
            this.updateSession(telegramId, deviceId, this.getTelegramUsername());
            
        } catch (error) {
            console.log('üì¥ –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏');
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    updateActivity() {
        localStorage.setItem(this.activityKey, Date.now().toString());
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    stopMonitoring() {
        if (this.checkInterval) {
            clearInterval(this.checkInterval);
            this.checkInterval = null;
        }
        this.isMonitoring = false;
        console.log('üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏
    getStatus() {
        const lastSync = JSON.parse(localStorage.getItem(this.syncKey) || '{}');
        const currentDevice = this.generateDeviceId();
        const isBlocked = localStorage.getItem(this.blockedKey) === currentDevice;
        
        return {
            isBlocked: isBlocked,
            currentDevice: currentDevice,
            telegramId: lastSync.telegramId,
            lastDevice: lastSync.deviceId,
            lastActivity: lastSync.timestamp ? new Date(lastSync.timestamp) : null
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π
window.multiSessionDetector = new MultiSessionDetector();

// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', async function() {
        console.log('üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ...');
        
        const allowed = await window.multiSessionDetector.checkMultiSessionOnLoad();
        
        if (!allowed) {
            return; // –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞
        }
        
        // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        setTimeout(() => {
            window.multiSessionDetector.startMonitoring();
        }, 2000);
    });
} else {
    setTimeout(async () => {
        const allowed = await window.multiSessionDetector.checkMultiSessionOnLoad();
        if (allowed) {
            window.multiSessionDetector.startMonitoring();
        }
    }, 2000);
}

console.log('‚úÖ –£–°–ò–õ–ï–ù–ù–ê–Ø —Å–∏—Å—Ç–µ–º–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –º—É–ª—å—Ç–∏—Å–µ—Å—Å–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
