// sync.js - —É–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ø–∞—Å—Å–∏–≤–Ω—ã–º –º–∞–π–Ω–∏–Ω–≥–æ–º
console.log('üîó –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞
let miningInterval = null;
let lastMiningTime = Date.now();

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
window.syncUserData = async function() {
    console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    
    if (!window.userData) {
        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return false;
    }
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const telegramId = getTelegramUserId();
        const username = getTelegramUsername();
        
        console.log(`üë§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è: ${username} (${telegramId})`);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–π–Ω–∏–Ω–≥ –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
        calculateOfflineMining();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ API
        const syncData = {
            telegramId: telegramId,
            username: username,
            balance: window.userData.balance,
            totalEarned: window.userData.totalEarned,
            totalClicks: window.userData.totalClicks,
            upgrades: window.upgrades,
            lastUpdate: new Date().toISOString(),
            mineSpeed: calculateMiningSpeed()
        };
        
        const response = await window.apiRequest('/api/sync/user', {
            method: 'POST',
            body: JSON.stringify(syncData)
        });
        
        if (response && response.success) {
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            localStorage.setItem('last_sync_time', Date.now());
            localStorage.setItem('last_mining_time', Date.now());
            return true;
        }
        
    } catch (error) {
        console.log('üì¥ –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
    }
    
    return false;
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
window.loadSyncedData = async function() {
    console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    try {
        const telegramId = getTelegramUserId();
        const response = await window.apiRequest(`/api/sync/user/${telegramId}`);
        
        if (response && response.success && response.userData) {
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', response.userData);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            const now = Date.now();
            localStorage.setItem('last_sync_time', now);
            localStorage.setItem('last_mining_time', now);
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            window.userData = {
                ...window.userData,
                ...response.userData,
                userId: getTelegramUserId(),
                username: getTelegramUsername()
            };
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–∏—è
            if (response.userData.upgrades) {
                window.upgrades = response.userData.upgrades;
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
            saveUserData();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            updateUI();
            updateShopUI();
            
            showNotification('–î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
            return true;
        }
        
    } catch (error) {
        console.log('üì¥ –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
    
    return false;
};

// –†–∞—Å—á–µ—Ç –æ—Ñ–ª–∞–π–Ω –º–∞–π–Ω–∏–Ω–≥–∞
function calculateOfflineMining() {
    const lastMining = parseInt(localStorage.getItem('last_mining_time')) || Date.now();
    const now = Date.now();
    const timeDiff = (now - lastMining) / 1000; // —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    
    if (timeDiff > 1 && window.userData) {
        const miningSpeed = calculateMiningSpeed();
        const minedAmount = miningSpeed * timeDiff;
        
        if (minedAmount > 0) {
            window.userData.balance += minedAmount;
            window.userData.totalEarned += minedAmount;
            
            console.log(`‚õèÔ∏è –ù–∞—á–∏—Å–ª–µ–Ω –æ—Ñ–ª–∞–π–Ω –º–∞–π–Ω–∏–Ω–≥: ${minedAmount.toFixed(9)} S –∑–∞ ${timeDiff.toFixed(0)} —Å–µ–∫`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –º–∞–π–Ω–∏–Ω–≥–∞
            localStorage.setItem('last_mining_time', now);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º UI
            saveUserData();
            updateUI();
        }
    }
}

// –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–π–Ω–∏–Ω–≥–∞
function startMiningSystem() {
    console.log('‚õèÔ∏è –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–∞–π–Ω–∏–Ω–≥–∞...');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    if (miningInterval) {
        clearInterval(miningInterval);
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞–π–Ω–∏–Ω–≥ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    miningInterval = setInterval(() => {
        if (window.userData && window.isDataLoaded) {
            const miningSpeed = calculateMiningSpeed();
            
            if (miningSpeed > 0) {
                window.userData.balance += miningSpeed;
                window.userData.totalEarned += miningSpeed;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
                if (Date.now() - lastMiningTime > 10000) {
                    updateUI();
                    saveUserData();
                    lastMiningTime = Date.now();
                }
                
                // –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
                updateBalanceImmediately();
            }
        }
    }, 1000); // –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(() => {
        if (window.userData) {
            window.syncUserData();
        }
    }, 30000);
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞
function calculateMiningSpeed() {
    let speed = 0.000000000;
    
    if (!window.upgrades) return speed;
    
    // –ë–æ–Ω—É—Å –æ—Ç –≤–∏–¥–µ–æ–∫–∞—Ä—Ç
    for (const key in window.upgrades) {
        if (key.startsWith('gpu') && window.upgrades[key]) {
            const level = window.upgrades[key].level || 0;
            const upgrade = UPGRADES[key];
            if (upgrade) {
                speed += level * upgrade.baseBonus;
            }
        }
    }
    
    // –ë–æ–Ω—É—Å –æ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤
    for (const key in window.upgrades) {
        if (key.startsWith('cpu') && window.upgrades[key]) {
            const level = window.upgrades[key].level || 0;
            const upgrade = UPGRADES[key];
            if (upgrade) {
                speed += level * upgrade.baseBonus;
            }
        }
    }
    
    return speed;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
function setupAutoSync() {
    console.log('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const originalSaveUserData = window.saveUserData;
    window.saveUserData = function() {
        originalSaveUserData();
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
        const lastSync = localStorage.getItem('last_sync_time');
        const now = Date.now();
        
        if (!lastSync || (now - lastSync) > 10000) {
            setTimeout(() => window.syncUserData(), 2000);
        }
    };
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        calculateOfflineMining(); // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–∏—Å–ª—è–µ–º –æ—Ñ–ª–∞–π–Ω –º–∞–π–Ω–∏–Ω–≥
        window.loadSyncedData();  // –ü–æ—Ç–æ–º –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    }, 2000);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('visibilitychange', function() {
        if (!document.hidden) {
            calculateOfflineMining();
            window.loadSyncedData();
        }
    });
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è Telegram ID
function getTelegramUserId() {
    if (typeof tg === 'undefined') {
        // –î–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
        let webId = localStorage.getItem('web_user_id');
        if (!webId) {
            webId = 'web_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('web_user_id', webId);
        }
        return webId;
    }
    
    const user = tg.initDataUnsafe?.user;
    
    // –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram ID –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    if (user && user.id) {
        return 'tg_' + user.id;
    } else if (user && user.username) {
        return 'tg_' + user.username.toLowerCase();
    }
    
    return 'unknown_user';
}

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–π–Ω–∏–Ω–≥–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
function addMiningInfo() {
    const balanceSection = document.querySelector('.balance-section');
    if (balanceSection && !document.getElementById('miningInfo')) {
        const miningInfo = document.createElement('div');
        miningInfo.id = 'miningInfo';
        miningInfo.innerHTML = `
            <div style="margin-top: 10px; padding: 10px; background: rgba(76, 175, 80, 0.1); border-radius: 8px; border: 1px solid #4CAF50;">
                <div style="font-size: 12px; color: #4CAF50;">‚õèÔ∏è –ü–∞—Å—Å–∏–≤–Ω—ã–π –º–∞–π–Ω–∏–Ω–≥: <span id="currentMiningSpeed">0.000000000</span> S/—Å–µ–∫</div>
                <div style="font-size: 10px; color: #888;">–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</div>
            </div>
        `;
        balanceSection.appendChild(miningInfo);
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–π–Ω–∏–Ω–≥–µ
function updateMiningInfo() {
    const miningSpeedElement = document.getElementById('currentMiningSpeed');
    if (miningSpeedElement) {
        const miningSpeed = calculateMiningSpeed();
        miningSpeedElement.textContent = miningSpeed.toFixed(9);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –º–∞–π–Ω–∏–Ω–≥–∞
function initializeSyncAndMiningSystem() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –º–∞–π–Ω–∏–Ω–≥–∞...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–π–Ω–∏–Ω–≥–µ
    addMiningInfo();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    setupAutoSync();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –º–∞–π–Ω–∏–Ω–≥–∞
    startMiningSystem();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–π–Ω–∏–Ω–≥–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    setInterval(updateMiningInfo, 5000);
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –º–∞–π–Ω–∏–Ω–≥–∞ –≥–æ—Ç–æ–≤–∞!');
}

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞–π–Ω–∏–Ω–≥–∞
const originalUpdateUI = window.updateUI;
window.updateUI = function() {
    if (originalUpdateUI) originalUpdateUI();
    updateMiningInfo();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞–π–Ω–∏–Ω–≥–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    const mineSpeedElement = document.getElementById('mineSpeed');
    if (mineSpeedElement) {
        mineSpeedElement.textContent = calculateMiningSpeed().toFixed(9) + ' S/—Å–µ–∫';
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(initializeSyncAndMiningSystem, 1000);
});

console.log('üîó –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
